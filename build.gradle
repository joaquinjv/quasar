buildscript {
	repositories {
    	mavenCentral()
	}

	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.4.2'
		classpath 'org.akhikhl.gretty:gretty:+'
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id 'org.gretty' version '3.0.3'
	id 'com.google.cloud.tools.appengine' version '2.4.2'
}

sourceCompatibility = '11'

repositories {
	maven {
    	url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
	}
  	mavenCentral()
  	jcenter()
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
	implementation 'com.google.appengine:appengine-api-1.0-sdk:+'
	implementation 'com.google.appengine:appengine-endpoints:1.9.53'
	implementation 'org.apache.logging.log4j:log4j-api:2.15.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.15.0'
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.15.0'
	implementation 'org.springframework.data:spring-data-jpa:2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.0.RELEASE'
	implementation 'org.springframework:spring-tx:5.2.5.RELEASE'
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'org.springframework:spring-orm:5.2.5.RELEASE'
	implementation 'com.lemmingapex.trilateration:trilateration:1.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.cloud.tools:appengine-gradle-plugin:2.4.2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	providedCompile 'com.google.appengine:appengine:+'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
	
    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

gretty {
    servletContainer = 'jetty9'  // What App Engine Flexible uses
}

import org.akhikhl.gretty.AppStartTask

appengine {
	deploy {
		projectId = 'quasarml-340722'
		version = '3'
	}
}

group   = "com.ml.quasar"        // Generated output GroupId

bootJar {
    manifest {
    attributes 'Start-Class': 'com.ml.quasar.QuasarApplication'
    }
}
version = "3.0-SNAPSHOT"       // Version in generated output

/*
tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}*/